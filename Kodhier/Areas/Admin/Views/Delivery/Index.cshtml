@model IEnumerable<Kodhier.ViewModels.DeliveryViewModel>
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayAdmin.cshtml";
    ViewData["Title"] = "Delivery";
}

<h2>Delivery</h2>

<form asp-action="Assign">
    <input type="submit" class="btn btn-info" value="Get New Order" />
</form>
<div><p>Pending deliveries: <span id="availableOrders"></span></p></div>
<br />
<table>
    <tr>
        <th>Name</th>
        <th>Quantity</th>
        <th>Size</th>
        <th>Comment</th>
        <th>Address</th>
        <th>Color code</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Name</td>
            <td>@item.Quantity</td>
            <td>@item.Size</td>
            <td>@item.Comment</td>
            <td>@item.DeliveryAddress</td>
            <td>
                <form asp-action="ChangeColor" method="post" style="display: inline-block;">
                    <input type="hidden" name="id" value="@Html.DisplayFor(modelItem => item.Id)" />
                    <select name="Color" data-color="@item.DeliveryColor" asp-items="@(new SelectList(new[] { "Red", "Orange", "Yellow", "Green", "Blue", "Purple" }))"></select>
                </form>
                <form asp-action="Abandon" method="post" style="display: inline;">
                    <input name="id" value="@item.Id" type="hidden" />
                    <input type="submit" value="Abandon" class="btn btn-outline-warning" style="cursor:pointer" />
                </form>
                <form asp-action="Complete" method="post" style="display: inline;">
                    <input name="id" value="@item.Id" type="hidden" />
                    <input type="submit" value="Delivered" class="btn btn-outline-info" style="cursor:pointer" />
                </form>
            </td>
        </tr>
    }
</table>

<br />
<div id="map" style="width: 480px; height: 480px;"></div>


@section Scripts {
    <script>
        $(function () {
            var colorbox = $("table select[name='Color']");
            colorbox.each(function (i, v) {
                $(v).val($(v).data('color'));
            });
            colorbox.change(function() {
                $(this).parent().submit();
            });
        });
    </script>
    <script>
        function updateData() {
            $.get("@Url.Action("AvailableCount", "Delivery")", function(data) {
                $('#availableOrders').html(data);
            });
        }

        updateData();
        setInterval(updateData, 5 * 1000);
    </script>
    <script>
        var geocoder;
        var map;
        var markers = [];

        var addresses = @Json.Serialize(Model.Select(t => new { addr = t.DeliveryAddress, color = t.DeliveryColor.ToString() }));

        function initMap() {
            geocoder = new window.google.maps.Geocoder();
            map = new window.google.maps.Map(document.getElementById('map'),
                {
                    center: { lat: 54.9049311, lng: 23.9544675 },
                    zoom: 11
                }
            );

            for (var i = 0; i < addresses.length; i++) {
                var color = addresses[i].color.toLowerCase();
                geocoder.geocode({ 'address': addresses[i].addr }, function (results, status) {
                    if (status === 'OK') {
                        markers.push(new window.google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                            icon: 'http://maps.google.com/mapfiles/ms/icons/' + color + '-dot.png'
                        }));
                    }
                });
            }
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzAKx9JC4eS_8qbGX9iz5ZwRfJ1u8Zf4o&libraries=places&callback=initMap" async defer></script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
