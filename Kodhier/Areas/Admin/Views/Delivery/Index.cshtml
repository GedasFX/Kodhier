@model IEnumerable<Kodhier.ViewModels.DeliveryViewModel>
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayAdmin.cshtml";
    ViewData["Title"] = "Delivery";
}

<h2>Delivery</h2>

<form asp-action="Assign" method="post">
    <input type="submit" value="Assign new" class="btn btn-outline-success" style="cursor:pointer" /> <!-- style overrides -->
</form>

<b>Pending deliveries:</b>
<table>
    <tr>
        <th>Name</th>
        <th>Quantity</th>
        <th>Size</th>
        <th>Comment (gal nereikia?)</th>
        <th>Deliver to</th>
        <th>###</th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>@Html.DisplayFor(modelItem => item.Name)</td>
        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
        <td>@Html.DisplayFor(modelItem => item.Size)</td>
        <td>@Html.DisplayFor(modelItem => item.DeliveryAddress)</td>

        <td>@Html.DisplayFor(modelItem => item.Comment)</td>
        <td>
            <input type="hidden" name="Color" value="@Html.DisplayFor(modelItem => item.DeliveryColor)" />
            <!-- style overrides -->

            <form asp-action="ChangeColor" method="post" style="display: inline-block;">
                <input type="hidden" name="id" value="@Html.DisplayFor(modelItem => item.Id)" />
                <select name="Color" asp-items="@(new SelectList(new String[]{ "Red", "Orange", "Yellow", "Green", "Blue", "Purple" }))" onchange="$(this).parent().submit()"></select>
            </form>
            <form asp-action="Abandon" method="post" style="display: inline;">
                <input name="id" value="@item.Id" type="hidden" />
                <input type="submit" value="Abandon" class="btn btn-outline-warning" style="cursor:pointer" />
            </form>
            <form asp-action="Complete" method="post" style="display: inline;">
                <input name="id" value="@item.Id" type="hidden" />
                <input type="submit" value="Delivered" class="btn btn-outline-info" style="cursor:pointer" />
            </form>
        </td>
    </tr>
    }
</table>

<br />
<div id="map" style="width: 480px; height: 480px;"></div>


@section Scripts {
    <script>
        $(function () {
            $("table tr").each(function (i, element) {
                if (i == 0) return;
                $(element).find("select").val($(element).find("input[name=Color]").val());
            });
        });
    </script>

    <script>
        var geocoder;
        var map;
        var markers = [];

        var addresses = @Json.Serialize(Model.Select(t => new { addr = t.DeliveryAddress, color = t.DeliveryColor.ToString().ToLower() }));

        function initMap() {
            geocoder = new google.maps.Geocoder();
            map = new window.google.maps.Map(document.getElementById('map'),
                {
                    center: { lat: 54.9049311, lng: 23.9544675 },
                    zoom: 11
                }
            );

            for (var i = 0; i < addresses.length; i++) {
                codeAddr(map, geocoder, i);
            }
        }

        function codeAddr(map, geocoder, i) {
            var color = addresses[i].color;
            geocoder.geocode({ 'address': addresses[i].addr, 'region': 'lt' }, function (results, status) {
                if (status == 'OK') {
                    //map.setCenter(results[0].geometry.location);
                    markers.push(new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        icon: 'http://maps.google.com/mapfiles/ms/icons/' + color + '-dot.png'
                    }));
                } else {
                    //alert('There was a problem displaying the address: ' + status);
                }
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzAKx9JC4eS_8qbGX9iz5ZwRfJ1u8Zf4o&libraries=places&callback=initMap" async defer></script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
