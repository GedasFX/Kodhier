@using Microsoft.AspNetCore.Mvc.ModelBinding
@model Kodhier.ViewModels.ConfirmCheckoutViewModel

@{
    ViewData["Title"] = "Continue";
}
<link rel="stylesheet" href="~/assets/css/Map-Clean.css">
<link rel="stylesheet" type="text/css" href="~/css/Order.css" />

<header>
    <h1>CHECKOUT</h1>
</header>
<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="products">
                <div class="modal-header">
                    <h6 class="display-4">ORDER</h6>
                </div>
                <br />
                <p class="font-weight-bold lead ">Total: @(Model.Price) coins&trade;</p>
                <table>
                    @foreach (var item in Model.CheckoutList)
                    {
                        <tr>@item.Name</tr>
                    }
                </table>
            </div>
        </div>
        <div class="col-md-8">
            <div class="products">
                <div class="modal-header">
                    <h6 class="display-4">DELIVERY DETAILS</h6>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <form asp-action="Continue" method="post" id="confrimCheckout">
                            <br />
                            <p class="lead">SHIPPING ADDRESS:</p>
                            <input type="text" id="address" name="confirmAddress" class="form-control" placeholder="SHIPPING ADDRESS" value="@(Model.ConfirmAddress)" />
                            <input type="submit" value="PLACE ORDER" class="btn btn-success btn-block" style="margin-top:5px" />
                            <a asp-action="Index" class="btn btn-warning btn-block" style="margin-top:5px">Back</a>
                        </form>
                    </div>
                    <div class="col-md-8">
                        <br />
                        <div id="map"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $('#confrimCheckout').on('keyup keypress',
            function (e) {
                var keyCode = e.keyCode || e.which;
                if (keyCode === 13) {
                    e.preventDefault();
                    return false;
                }
                return true;
            });
    </script>
    <script>
        var autocomplete;
        var geocoder;
        var map;
        var marker;

        function initMap() {
            map = new window.google.maps.Map(document.getElementById('map'),
                {
                    center: { lat: 54.9049311, lng: 23.9544675 },
                    zoom: 13
                });
            marker = new window.google.maps.Marker({
                map: map
            });

            geocoder = new window.google.maps.Geocoder();
            autocomplete = new window.google.maps.places.Autocomplete(document.getElementById('address'),
                { componentRestrictions: { country: "lt" } });
            autocomplete.bindTo('bounds', map);

            autocomplete.addListener('place_changed',
                function () {
                    if (marker != null)
                        marker.setVisible(false);

                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        // User entered the name of a Place that was not suggested and
                        // pressed the Enter key, or the Place Details request failed.
                        marker.setVisible(false);
                        return;
                    }

                    // If the place has a geometry, then present it on a map.
                    if (place.geometry.viewport) {
                        map.fitBounds(place.geometry.viewport);
                    } else {
                        map.setCenter(place.geometry.location);
                        map.setZoom(17); // Why 17? Because it looks good.
                    }
                    marker.setPosition(place.geometry.location);
                    marker.setVisible(true);
                });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzAKx9JC4eS_8qbGX9iz5ZwRfJ1u8Zf4o&libraries=places&callback=initMap" async defer></script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
