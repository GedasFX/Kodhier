@model Kodhier.ViewModels.OrderViewModels.OrderCreateViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Details"];
}
<link rel="stylesheet" type="text/css" href="~/css/Order.css" />

<div class="container">
    <div class="main col-md-12">
        <header>
            <h2>@Localizer["Pizza Details"]</h2>
        </header>
        <div class="products">
            <blockquote class="blockquote text-center">
                <p class="h1 text-uppercase">@Html.DisplayFor(model => model.Name)</p>
            </blockquote>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="text-center">
                            <img src="@Url.Content(Model.ImagePath)" class="rounded-circle img-fluid" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            <dl class="dl-horizontal">
                                <dt>@Localizer["Price"]</dt>
                                <dd>@Localizer["From"] @Model.MinPrice €</dd>
                                <dt>@Model.Description</dt>
                            </dl>
                        </div>
                        <form asp-action="Create" asp-route-id="@Model.Name">
                            <input asp-for="Description" hidden />
                            <input asp-for="ImagePath" hidden />
                            <input asp-for="Name" hidden />
                            <div class="col-md-12">
                                <label asp-for="Quantity">@Localizer["Quantity"]</label>
                                <input asp-for="Quantity" id="quantity" value="1" class="form-control" />
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                            <div class="col-md-12">
                                <label asp-for="SizeId">@Localizer["Size (in cm)"]</label>
                                <select asp-for="SizeId" asp-items="@(new SelectList(Model.Prices, "Id", "Size"))" class="form-control"></select>
                                <span asp-validation-for="SizeId" class="text-danger"></span>
                            </div>
                            @* TODO: Make this less ugly. *@
                            <div class="col-12">
                                <h2>@Localizer["Price per pizza:"] <span id="priceValue"></span> €</h2>
                            </div>
                            <div class="col-md-12 form-group">
                                <label asp-for="Comment">@Localizer["Comment"]</label>
                                <input asp-for="Comment" class="form-control" placeholder="@Localizer["Optional"]" />
                                <span asp-validation-for="Comment" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="@Localizer["Order"]" style="margin-top: 5px" class="btn btn-outline-success" />
                            </div>
                        </form>
                        <a asp-action="Index" class="backToMeniubtn">@Localizer["Back to List"]</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var raw = @Json.Serialize(Model.Prices.Select(t => new { Category = t.Id, t.Price }));
        var values = {};
        for (var i = 0; i < raw.length; i++) {
            values[raw[i].category] = raw[i].price;
        }
        var drop = $('#SizeId');
        $('#priceValue').html(values[drop.val()]);

        drop.change(function() {
            $('#priceValue').html(values[drop.val()]);
        });
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}

